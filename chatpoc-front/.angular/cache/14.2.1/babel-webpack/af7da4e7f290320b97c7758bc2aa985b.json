{"ast":null,"code":"import { Stomp } from '@stomp/stompjs';\nimport * as SockJS from 'sockjs-client';\nimport { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport let ChatService = /*#__PURE__*/(() => {\n  class ChatService {\n    constructor() {\n      this.messageSubject = new BehaviorSubject([]);\n      const socketFactory = () => new SockJS('http://localhost:8080/chat-socket');\n      this.stompClient = Stomp.over(socketFactory);\n      this.stompClient.reconnectDelay = 5000;\n      this.stompClient.onConnect = () => {\n        this.stompClient.subscribe('/topic/room-support', message => {\n          const newMsg = JSON.parse(message.body);\n          const current = this.messageSubject.value;\n          this.messageSubject.next([...current, newMsg]);\n        });\n      };\n      this.stompClient.activate();\n    }\n    sendMessage(content, sender) {\n      if (!this.stompClient.connected) return;\n      const msg = {\n        text: content,\n        author: sender\n      };\n      this.stompClient.publish({\n        destination: '/app/chat/room-support',\n        body: JSON.stringify(msg)\n      });\n    }\n    getMessages() {\n      return this.messageSubject.asObservable();\n    }\n  }\n  ChatService.ɵfac = function ChatService_Factory(t) {\n    return new (t || ChatService)();\n  };\n  ChatService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ChatService,\n    factory: ChatService.ɵfac,\n    providedIn: 'root'\n  });\n  return ChatService;\n})();","map":null,"metadata":{},"sourceType":"module"}