{"ast":null,"code":"import { Client } from '@stomp/stompjs';\nimport * as SockJS from 'sockjs-client';\nimport { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport let ChatService = /*#__PURE__*/(() => {\n  class ChatService {\n    constructor() {\n      this.messages$ = new BehaviorSubject([]);\n      this.roomId = 'support-room';\n      this.client = new Client({\n        brokerURL: undefined,\n        webSocketFactory: () => new SockJS('http://localhost:8080/ws-chat'),\n        reconnectDelay: 5000,\n        onConnect: () => {\n          this.client.subscribe(`/topic/${this.roomId}`, message => {\n            const newMsg = JSON.parse(message.body);\n            this.messages$.next([...this.messages$.getValue(), newMsg]);\n          });\n        },\n        onStompError: frame => {\n          console.error('STOMP error:', frame.headers['message']);\n        }\n      });\n      this.client.activate();\n    }\n    sendMessage(content, sender) {\n      const msg = {\n        sender,\n        content\n      };\n      this.client.publish({\n        destination: `/app/chat/${this.roomId}`,\n        body: JSON.stringify(msg)\n      });\n    }\n    getMessages() {\n      return this.messages$.asObservable();\n    }\n  }\n  ChatService.ɵfac = function ChatService_Factory(t) {\n    return new (t || ChatService)();\n  };\n  ChatService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ChatService,\n    factory: ChatService.ɵfac,\n    providedIn: 'root'\n  });\n  return ChatService;\n})();","map":null,"metadata":{},"sourceType":"module"}