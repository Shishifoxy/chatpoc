{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/chat.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction ChatComponent_li_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ÉµÉµelementStart(0, \"li\")(1, \"strong\");\n    i0.ÉµÉµtext(2);\n    i0.ÉµÉµelementEnd();\n    i0.ÉµÉµtext(3);\n    i0.ÉµÉµelementEnd();\n  }\n  if (rf & 2) {\n    const msg_r1 = ctx.$implicit;\n    i0.ÉµÉµadvance(2);\n    i0.ÉµÉµtextInterpolate1(\"\", msg_r1.sender, \" :\");\n    i0.ÉµÉµadvance(1);\n    i0.ÉµÉµtextInterpolate1(\" \", msg_r1.message, \" \");\n  }\n}\nexport let ChatComponent = /*#__PURE__*/(() => {\n  class ChatComponent {\n    constructor(chatService, route) {\n      this.chatService = chatService;\n      this.route = route;\n      this.messageInput = '';\n      this.messageList = [];\n      this.roomId = '';\n      this.sender = '';\n    }\n    ngOnInit() {\n      this.route.paramMap.subscribe(params => {\n        const role = params.get('userId') || 'user'; // soit \"user\" soit \"operator\"\n        this.sender = role;\n        this.roomId = 'room-support'; // ðŸ”¥ TOUS dans la mÃªme room\n        this.chatService.connect(this.roomId);\n        this.chatService.getMessages().subscribe(messages => {\n          this.messageList = messages;\n        });\n      });\n    }\n    sendMessage() {\n      if (this.messageInput.trim()) {\n        this.chatService.sendMessage(this.messageInput, this.sender, this.roomId);\n        this.messageInput = '';\n      }\n    }\n    isSender(msg) {\n      return msg.sender === this.sender;\n    }\n  }\n  ChatComponent.Éµfac = function ChatComponent_Factory(t) {\n    return new (t || ChatComponent)(i0.ÉµÉµdirectiveInject(i1.ChatService), i0.ÉµÉµdirectiveInject(i2.ActivatedRoute));\n  };\n  ChatComponent.Éµcmp = /*@__PURE__*/i0.ÉµÉµdefineComponent({\n    type: ChatComponent,\n    selectors: [[\"app-chat\"]],\n    decls: 7,\n    vars: 2,\n    consts: [[1, \"chat-window\"], [1, \"messages\"], [4, \"ngFor\", \"ngForOf\"], [1, \"input-area\"], [\"placeholder\", \"\\u00C9cris ton message...\", 3, \"ngModel\", \"ngModelChange\"], [3, \"click\"]],\n    template: function ChatComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ÉµÉµelementStart(0, \"div\", 0)(1, \"ul\", 1);\n        i0.ÉµÉµtemplate(2, ChatComponent_li_2_Template, 4, 2, \"li\", 2);\n        i0.ÉµÉµelementEnd();\n        i0.ÉµÉµelementStart(3, \"div\", 3)(4, \"input\", 4);\n        i0.ÉµÉµlistener(\"ngModelChange\", function ChatComponent_Template_input_ngModelChange_4_listener($event) {\n          return ctx.messageInput = $event;\n        });\n        i0.ÉµÉµelementEnd();\n        i0.ÉµÉµelementStart(5, \"button\", 5);\n        i0.ÉµÉµlistener(\"click\", function ChatComponent_Template_button_click_5_listener() {\n          return ctx.sendMessage();\n        });\n        i0.ÉµÉµtext(6, \"Envoyer\");\n        i0.ÉµÉµelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ÉµÉµadvance(2);\n        i0.ÉµÉµproperty(\"ngForOf\", ctx.messageList);\n        i0.ÉµÉµadvance(2);\n        i0.ÉµÉµproperty(\"ngModel\", ctx.messageInput);\n      }\n    },\n    dependencies: [i3.NgForOf, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgModel]\n  });\n  return ChatComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}